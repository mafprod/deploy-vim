---
# tasks file for vim
- name: Load package list
  ansible.builtin.include_vars:
    file: "{{ ansible_facts.distribution }}.yml"
- name: Install required packages
  ansible.builtin.package:
    name: "{{ pkg_list }}"
    state: present
    use: "{{ 'kewlfft.aur.aur' if ansible_facts.distribution == 'Archlinux'
      else 'auto' }}"
  become: "{{ pkg_become }}"
  become_user: "{{ pkg_become_user }}"

- name: Ensure .vim directory exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: false
    mode: "0750"
  loop:
    - "{{ vim_dir }}"
    - "{{ vim_dir }}/autoload"
    - "{{ nvimrc }}"

- name: Ensure vim-plug is in place
  ansible.builtin.get_url:
    dest: "{{ vim_dir }}/autoload/plug.vim"
    url: "https://raw.githubusercontent.com/junegunn/vim-plug/refs/heads/master/plug.vim"
    mode: "0750"

- name: Create virtual pyhton environment for neovim
  ansible.builtin.pip:
    virtualenv: "{{ nvimrc }}/python"
    virtualenv_command: "python3 -m venv"
    name: "pynvim"

- name: Ensure .vimrc config in place
  ansible.builtin.copy:
    src: vimrc
    dest: "{{ vimrc }}"
    backup: true
    mode: "0640"

- name: Ensure the plugin bootstrapper is in place
  ansible.builtin.copy:
    src: initialize.vim
    dest: "{{ vimdir }}"
    backup: true
    mode: "0640"

- name: Ensure neovim's init.vim config in place
  ansible.builtin.copy:
    src: init.vim
    dest: "{{ nvimrc }}"
    backup: true
    mode: "0640"

- name: Ensure .perltidy config in place
  ansible.builtin.copy:
    src: perltidyrc
    dest: "{{ perltidyrc }}"
    backup: true
    mode: "0640"

- name: Install plugins before we start using (n)vim
  ansible.builtin.command: vim -u initialize.vim +'PlugUpgrade' +qa
  register: plug_output
