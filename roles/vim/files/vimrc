" Required:
call plug#begin(expand('~/.vim/plugged'))

"*****************************************************************************
"" Plug install packages
"*****************************************************************************
Plug 'vim-airline/vim-airline' 
Plug 'vim-airline/vim-airline-themes' 
Plug 'airblade/vim-gitgutter'   
Plug 'preservim/nerdtree' 
Plug 'junegunn/fzf' 
Plug 'junegunn/fzf.vim' 
Plug 'godlygeek/tabular'   
Plug 'preservim/vim-markdown' 
Plug 'elzr/vim-json'     
Plug 'pearofducks/ansible-vim' 
Plug 'tell-k/vim-autopep8' 
Plug 'dense-analysis/ale' 
Plug 'mpeterv/luacheck' 
Plug 'https://tpope.io/vim/fugitive.git' 
Plug 'mcchrish/nnn.vim' 
Plug 'nyoom-engineering/oxocarbon.nvim', { 'as': 'oxocarbon' }
Plug 'catppuccin/nvim', { 'as': 'catppuccin' }
Plug 'ellisonleao/glow.nvim', { 'as': 'glow' }

call plug#end()

if $VIM_BOOTSTRAP == "true" | finish | endif

if has('lua') && v:version >= 900
    " Configure catppuccin on recent neovim
    colorscheme catppuccin
    lua require("catppuccin").setup({flavour = "latte"})
else
    colo default
endif

let mapleader = '-'
let maplocalleader = '\'
syntax on
set ruler
set tw=78
set autoindent
set expandtab
set smarttab
set shiftwidth=4
set softtabstop=8
set tabstop=8
set conceallevel=2
set mouse=""
filetype plugin indent on

colo default

" Configuration vim Airline
set laststatus=2

let g:airline#extensions#tabline#enabled=1
let g:airline_powerline_fonts=1
let g:airline_theme='papercolor'

" Configuration NERDTree
map <C-]> :NERDTreeToggle<CR>

" Configuration floaterm
let g:floaterm_keymap_toggle = '<F12>'
let g:floaterm_width = 0.9
let g:floaterm_height = 0.9

" Configuration Vim.FZF
let g:fzf_preview_window = 'right:50%'
let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6  }  }

" Configuration vim-markdown
let g:vim_markdown_folding_disabled = 1

" GitGutter statusline
function! GitStatus()
    let [a,m,r] = GitGutterGetHunkSummary()
    return printf('+%d ~%d -%d', a, m, r)
endfunction
set statusline+=%{GitStatus()}
set updatetime=100

" Perltidy as = command for perl files
autocmd FileType perl setlocal equalprg=perltidy\ -st

" ALE Configuration
let g:ale_virtualtext_cursor = 'disabled'

" Write file via sudo
command W silent execute 'write !sudo tee ' . shellescape(@%, 1) . ' >/dev/null'
map <C-s> :W<CR>

" Custom functions
nnoremap <localleader>ev :vsplit $MYVIMRC<cr>
nnoremap <localleader>sv :source $MYVIMRC<cr>
nnoremap <localleader>el :vsplit ~/.vim/local_options.vim<cr>
nnoremap <localleader>sl :source ~/.vim/local_options.vim<cr>
nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>bi'<esc>lel
nnoremap <localleader>" a"<esc>`<i"<esc>`>
nnoremap <localleader>' a'<esc>`<i'<esc>`>

" Source if exists function
function! SourceIfExists(file)
    if filereadable(expand(a:file))
        exe 'source' a:file
    endif
endfunction

" Source local_options if they exist
call SourceIfExists("~/.vim/local_options.vim")

" Add custom mapping for NnnExplorer
nnoremap <silent> <localleader>n :NnnExplorer<CR>
